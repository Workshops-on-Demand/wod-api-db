{% raw %}
var cors = require('cors'),
  router = express.Router(),
  dotenv = require('dotenv');

import express from 'express';
import bodyParser from 'body-parser';
import compression from 'compression';
import morgan from 'morgan';
import workshopRoutes from '../routes/workshops';
import customerRoutes from '../routes/customers';
import studentRoutes from '../routes/students';
import userRoutes from '../routes/users';
import loginRoutes from '../routes/login';
import emailsRoutes from '../routes/emails';
// import replaysRoutes from '../routes/replays';
import specialBadgesRoutes from '../routes/specialBadges';
import locationRoutes from '../routes/locations';
import runCronJobs from '../modules/CheckCustomers';
const swaggerJsdoc = require('swagger-jsdoc');
const swaggerUi = require('swagger-ui-express');
const db = require('../models');

dotenv.config();
{% endraw %}

const branding = '{{ BRANDINGWOD }}';
const brandingurl = '{{ BRANDINGURL }}';
const SOURCE_ORIGIN = 'http://{{ WODFEFQDN }}:{{ WODFEPORT }}';
const WODAPIDBURL = 'http://{{ WODAPIDBFQDN }}:{{ WODAPIDBPORT }}';

{% raw %}
const { FROM_EMAIL_ADDRESS, WODAPIDBPORT } = process.env;

const app = express();

let corsOptions = {
  origin: SOURCE_ORIGIN,
  //origin: [SOURCE_ORIGIN,WODAPIDBURL],
};
app.use(cors(corsOptions));
app.use(compression());
app.use(morgan('tiny'));
app.use(
  bodyParser.urlencoded({
    extended: true,
    limit: '20mb',
  })
);
app.use(bodyParser.json({ limit: '20mb' }));

// Swagger set up
const options = {
  swaggerDefinition: {
    openapi: '3.0.0',
    info: {
      title: branding+' Workshops-On-Demand API',
      version: '1.0.0',
      description: branding+' Workshops-On-Demand API documentation',
      license: {
        name: 'MIT',
        url: 'https://choosealicense.com/licenses/mit/',
      },
      contact: {
        name: branding,
        url: brandingurl,
        email: FROM_EMAIL_ADDRESS,
      },
    },
    servers: [
      {
        url: `http://localhost:${WODAPIDBPORT}/api`,
        description: 'Local (development) server',
      },
      {
        url: WODAPIDBURL,
        description: 'Main (production) server',
      },
    ],
  },
  apis: ['./models/*.js', './routes/*.js'],
};
const swaggerSpec = swaggerJsdoc(options);
router.use('/api/docs', swaggerUi.serve);
router.get(
  '/api/docs',
  swaggerUi.setup(swaggerSpec, {
    explorer: true,
  })
);

app.get('/swagger.json', function (req, res) {
  res.setHeader('Content-Type', 'application/json');
  res.send(swaggerSpec);
});

router.get('/', (req, res) => {
  res.json({
    hello: 'hi!',
  });
});

router.get('/test', (req, res) => {
  res.json({
    hello: 'test',
  });
});

// Model routes
app.use('/api', workshopRoutes);
app.use('/api', studentRoutes);
app.use('/api', customerRoutes);
app.use('/api', userRoutes);
app.use('/api', loginRoutes);
app.use('/api', emailsRoutes);
// app.use('/api', replaysRoutes);
app.use('/api', specialBadgesRoutes);
app.use('/api', locationRoutes);

app.use(express.json());
app.use('', router);

db.sequelize.sync();

app.listen(WODAPIDBPORT, () => {
  console.log(`${branding} Workshops On Demand API listening on port ${WODAPIDBPORT}!`); // eslint-disable-line no-console
  runCronJobs();
});

module.exports = app;
{% endraw %}
